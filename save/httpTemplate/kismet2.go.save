package httpTemplate

import (
	"fmt"
	"net/http"
	"strconv"
	"time"
)

// Home
type kismet2 struct {
	ServerVersion string
	ServerName    string
	StartTxt      string
	DBFile        string
	SSIDs         []string
	Interfaces    []string
}

func HttpKismet2(w http.ResponseWriter, req *http.Request, dbfile string, ssids []string) {
	templates["header"].Execute(w, header{"Kismet2"})

	//startInt, _ := strconv.ParseInt(kismet.ServerStart(), 10, 64)
	startInt, _ := strconv.ParseInt("123456", 10, 64)
	startTime := time.Unix(startInt, 0)
	hour, min, sec := startTime.Clock()
	startTxt := fmt.Sprintf("%02d:%02d:%02d", hour, min, sec)

	iNames := getInterfaces()

	//templates["/"].Execute(w, home{kismet.ServerVersion(), kismet.ServerName(), startTxt, dbfile, ssids, iNames})
	templates["/"].Execute(w, kismet2{"version", "name", startTxt, dbfile, ssids, iNames})
}

func tmplKismet2() string {
	return `
<center>
<table width="100%">
<tr><td width="30%">
<div class="verticalLine">
<span class="ntitle">Kismet Server</span><br>
<table class="nav">
<tr><th align="left">Version</th><td>{{.ServerVersion}}</td></tr>
<tr><th align="left">Name</th><td>{{.ServerName}}</td></tr>
<tr><th align="left">Start Time</th><td>{{.StartTxt}}</td></tr>
</table>
<p>
<span class="ntitle">gokismet Client</span><br>
<table class="nav">
<tr><th align="left" colspan="2">DB File</th></tr>
<tr><td align="left" colspan="2">{{.DBFile}}</td></tr>
</table>
<p>
<span class="ntitle">In-scope Networks</span><br>
<blockquote><ul class="nav">{{range .SSIDs}}
<li><a class="nav" onClick='conn.send(JSON.stringify({message: "statsSSID", ssid: {{.}}})); return false;' href="">{{.}}</a></li>{{end}}
</ul></blockquote>
<p>
<span class="ntitle">Stats</span><br>
<table class="nav">
<tr><th align='left'>Network Count</th><td><div id="statsNcount">0</div></td></tr>
<tr><th align='left'>Rogue Count</th><td><div id="statsRcount">0</div></td></tr>
<tr><th align='left'>Client Count</th><td><div id="statsCcount">0</div></td></tr>
<tr><th align='left'>Packet Count</th><td><div id="statsPcount">0</div></td></tr>
<tr><th align='left'>Packet/Sec</th><td><div id="statsPrate">0</div></td></tr>
<tr><th align='left'>Crypted Packets</th><td><div id="statsCrypted">0</div></td></tr>
<tr><th align='left'>Dropped Packets</th><td><div id="statsDropped">0</div></td></tr>
<tr><th align='left'>Filtered</th><td><div id="statsFiltered">0</div></td></tr>
<tr><th align='left'>Management</th><td><div id="statsManagement">0</div></td></tr>
<tr><th align='left'>Data</th><td><div id="statsData">0</div></td></tr>
</table>
<p>
<span class="ntitle">Network Interfaces</span><br>
<blockquote><ul class="nav">{{range .Interfaces}}
<li><a class="nav" onClick='conn.send(JSON.stringify({message: "statsNIC", nic: {{.}}})); return false;' href="">{{.}}</a></li>{{end}}
</ul></blockquote>
</div>
</td><td align="left" valign="top"><div name="wsOutput" id="wsOutput"></div></td></tr>
</table></center>
</body>
</html>
`
}
